server:
  port: 9000
  netty:
    connection-timeout: 2s
    idle-timeout: 15s
  shutdown: graceful

spring:
  application:
    name: edge-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  cloud:
    gateway:
      httpclient:
        connect-timeout: 2000
        response-timeout: 5s
        pool:
          type: elastic
          max-idle-time: 15s
          max-life-time: 60s
      routes:
      - id: catalog-route
        uri: ${CATALOG_SERVICE_URL:http://localhost:9001}/books
        predicates:
          - Path=/books/**
        filters:
          - name: CircuitBreaker
            args:
              name: catalogCircuitBreaker
              fallbackUri: forward:/catalog-fallback
      - id: order-route
        uri: ${ORDER_SERVICE_URL:http://localhost:9002}/orders
        predicates:
          - Path=/orders/**
        filters:
          - name: CircuitBreaker
            args:
              name: orderCircuitBreaker
      default-filters:
      - name: Retry
        args:
          retries: 3
          methods: GET
          series: SERVER_ERROR
          exceptions: java.io.IOException, java.util.concurrent.TimeoutException
          backoff:
            firstBackoff: 50ms
            maxBackOff: 500ms
            factor: 2
            basedOnPreviousValue: false

resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 20
        permittedNumberOfCallsInHalfOpenState: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 15000
  timelimiter:
    configs:
      default:
        timeoutDuration: 5s

logging:
  level:
    io.github.resilience4j: DEBUG